name: 🚀 Luna Bot CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  GO_VERSION: '1.24.4'
  BINARY_NAME: 'luna'

jobs:
  # 🏗️ ビルド
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          # Windows ARM64は除外
          - goos: windows
            goarch: arm64
            
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: 📦 Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: 📚 Download dependencies
      run: go mod download
      
    - name: 🏗️ Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        mkdir -p dist
        binary_name="${BINARY_NAME}"
        if [ "$GOOS" = "windows" ]; then
          binary_name="${binary_name}.exe"
        fi
        
        echo "Building ${binary_name} for ${GOOS}/${GOARCH}..."
        go build -ldflags="-s -w -X main.version=$(git describe --tags --always --dirty)" \
          -o "dist/${binary_name}-${GOOS}-${GOARCH}${binary_name##luna}" \
          ./cmd/bot/main.go
          
        # ファイルサイズを表示
        ls -lh "dist/${binary_name}-${GOOS}-${GOARCH}${binary_name##luna}"
        
    - name: 📦 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: luna-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/
        retention-days: 7

